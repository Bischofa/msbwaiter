% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/api_check_batch.R
\name{api_check_batch}
\alias{api_check_batch}
\title{Create or update MS Bioscreen data?}
\usage{
api_check_batch(sufl_batch, ignore_colnames = c("first_name", "last_name"),
  endpoint = "subjects",
  base_url = "https://msbioscreen-uat.herokuapp.com/api/v1",
  token = get_token("msbwaiter_token"), verbose_b = TRUE,
  overwrite_na_to_missing = FALSE, change = FALSE, max_update = 200)
}
\arguments{
\item{sufl_batch}{a data frame with appropriate identifier columns; see 'Details'.}

\item{ignore_colnames}{the column names to ignore when comparing the sufl data set with the data in the
bioscreen. Set to NULL to compare all columns.}

\item{endpoint}{the name of the data endpoint to fetch. Possible values are "subjects", "attacks",
"treatments", and "visits".}

\item{base_url}{the API base URL.}

\item{token}{HTTP authorization token. Default is to search global environment and environment for the variable 'msbwaiter_token'.}

\item{verbose_b}{print progress messages as function runs?}

\item{overwrite_na_to_missing}{if x contains an NA, should this data be removed from the JSON object
or does the NA represent a missing value that should be represented as null in the JSON. The default is set to
FALSE so that any NA values will be ignored and not part of the JSON.}

\item{change}{should the function proceed to actually update or create data in the bioscreen?
Default is set to FALSE.}

\item{max_update}{the maximum number of entries that you expect will need to be updated. If there are more than max_update entries to update,
\code{api_check_batch} will not proceed to create/update entries in the bioscreen even if \code{change} is equal to TRUE.}
}
\value{
\code{api_check_batch} returns a vector the same length as the number of rows in \code{sufl_batch} where each entry of the vector
is either create', 'update', or 'no action'. Please see ?\code{api_check} for more details.
}
\description{
\code{api_check_batch} compares the entries of \code{sufl_batch} with those currently in the bioscreen. This
function is similar to \code{api_check} except that it can take a sufl data set with many entries. \code{api_check_batch}
fetches all the data from the bioscreen and then performs its comparison. Please see ?\code{api_check} for more details.
}
\details{
sufl_batch must be a data frame with column names that follow the SUFL format. For checking
subjects data, sufl_batch needs to contain the identifier columns, 'source_id' and 'external_identifier'.
For checking attacks, treatments, or visits data, sufl_batch needs to contain the identifier columns,
'source_id', 'external_identifier', patient_source_id', and 'patient_external_identifier'. If any of
these columns are missing, \code{api_check_batch} will return an error message. Note that if there are
NA values in the non-identifier/non-ignore_colnames columns of sufl_batch that are non-missing in the
bioscreen, \code{api_check_batch} will return 'update' only if \code{overwrite_na_to_missing} is TRUE.
}
\seealso{
\code{\link{api_check}}, \code{\link{api_get_batch}}, \code{\link{api_create}},
\code{\link{api_update}}, \code{\link{to_json_non_array}}
}

